C> @file
C> @author WOOLLEN @date 1994-01-06
      
C> THIS SUBROUTINE SHOULD ONLY BE CALLED WHEN LOGICAL UNIT
C>   ABS(LUNXX) HAS BEEN OPENED FOR OUTPUT OPERATIONS.
C>
C>   WHEN LUNXX IS GREATER THAN ZERO, IT PACKS UP THE CURRENT SUBSET
C>   WITHIN MEMORY AND THEN TRIES TO ADD IT TO THE BUFR MESSAGE THAT IS
C>   CURRENTLY OPEN WITHIN MEMORY FOR ABS(LUNXX).  THE DETERMINATION AS
C>   TO WHETHER OR NOT THE SUBSET CAN BE ADDED TO THE MESSAGE IS MADE
C>   VIA AN INTERNAL CALL TO ONE OF THE BUFR ARCHIVE LIBRARY SUBROUTINES
C>   WRCMPS OR MSGUPD, DEPENDING UPON WHETHER OR NOT THE MESSAGE IS
C>   COMPRESSED.  IF IT TURNS OUT THAT THE SUBSET CANNOT BE ADDED TO THE
C>   CURRENTLY OPEN MESSAGE, THEN THAT MESSAGE IS FLUSHED TO ABS(LUNXX)
C>   AND A NEW ONE IS CREATED IN ORDER TO HOLD THE SUBSET.  AS LONG AS
C>   LUNXX IS GREATER THAN ZERO, WRITSA FUNCTIONS EXACTLY LIKE BUFR
C>   ARCHIVE LIBRARY SUBROUTINE WRITSB, EXCEPT THAT WRITSA ALSO RETURNS
C>   A COPY OF EACH COMPLETED BUFR MESSAGE TO THE APPLICATION PROGRAM
C>   IN THE FIRST MSGL WORDS OF ARRAY MSGT.
C>
C>   ALTERNATIVELY, WHEN LUNXX IS LESS THAN ZERO, THIS IS A SIGNAL TO
C>   FORCE ANY CURRENT MESSAGE IN MEMORY TO BE FLUSHED TO ABS(LUNXX) AND
C>   RETURNED IN ARRAY MSGT.  IN SUCH CASES, ANY CURRENT SUBSET IN MEMORY
C>   IS IGNORED.  THIS OPTION IS NECESSARY BECAUSE, IN MOST CASES, ANY
C>   MESSAGE RETURNED IN MSGT FROM A CALL TO THIS ROUTINE DOESN'T CONTAIN
C>   THE ACTUAL SUBSET THAT WAS PACKED UP AND STORED DURING THE SAME CALL
C>   TO THIS ROUTINE.  THEREFORE, THE ONLY WAY TO ENSURE THAT EVERY LAST
C>   BUFR SUBSET IS RETURNED WITHIN A BUFR MESSAGE IN MSGT BEFORE, E.G.,
C>   EXITING THE APPLICATION PROGRAM, IS TO DO ONE FINAL CALL TO THIS
C>   ROUTINE WITH LUNXX LESS THAN ZERO IN ORDER TO FORCIBLY FLUSH OUT AND
C>   RETURN ONE FINAL BUFR MESSAGE.
C>
C> PROGRAM HISTORY LOG:
C> 1994-01-06  J. WOOLLEN -- ORIGINAL AUTHOR
C> 1998-07-08  J. WOOLLEN -- REPLACED CALL TO CRAY LIBRARY ROUTINE
C>                           "ABORT" WITH CALL TO NEW INTERNAL BUFRLIB
C>                           ROUTINE "BORT"
C> 2000-09-19  J. WOOLLEN -- MAXIMUM MESSAGE LENGTH INCREASED FROM
C>                           10,000 TO 20,000 BYTES
C> 2003-11-04  S. BENDER  -- ADDED REMARKS/BUFRLIB ROUTINE
C>                           INTERDEPENDENCIES
C> 2003-11-04  D. KEYSER  -- UNIFIED/PORTABLE FOR WRF; ADDED
C>                           DOCUMENTATION (INCLUDING HISTORY); OUTPUTS
C>                           MORE COMPLETE DIAGNOSTIC INFO WHEN ROUTINE
C>                           TERMINATES ABNORMALLY
C> 2004-08-18  J. ATOR    -- ADD POST-MSGUPD CHECK FOR AND RETURN OF
C>                           MESSAGE WITHIN MSGT IN ORDER TO PREVENT
C>                           LOSS OF MESSAGE IN CERTAIN SITUATIONS;
C>                           MAXIMUM MESSAGE LENGTH INCREASED FROM
C>                           20,000 TO 50,000 BYTES
C> 2005-03-09  J. ATOR    -- ADDED CAPABILITY FOR COMPRESSED MESSAGES
C> 2009-03-23  J. ATOR    -- ADDED LMSGT ARGUMENT AND CHECK
C> 2014-12-10  J. ATOR    -- USE MODULES INSTEAD OF COMMON BLOCKS
C> 2019-05-09  J. ATOR    -- ADDED DIMENSIONS FOR MSGLEN AND MSGTXT
C> 2020-09-22  J. ATOR    -- ADDED CAPABILITY TO RETURN TWO BUFR
C>                           MESSAGES WITHIN MSGT DURING THE SAME CALL
C>                           TO THIS ROUTINE, IN THE RARE INSTANCES
C>                           WHERE THIS CAN OCCUR.
C>
C> USAGE:    CALL WRITSA (LUNXX, LMSGT, MSGT, MSGL)
C>   INPUT ARGUMENT LIST:
C>     LUNXX    - INTEGER: ABSOLUTE VALUE IS FORTRAN LOGICAL UNIT NUMBER
C>                FOR BUFR FILE {IF LUNXX IS LESS THAN ZERO, THEN ANY
C>                CURRENT MESSAGE IN MEMORY WILL BE FORCIBLY FLUSHED TO
C>                ABS(LUNXX) AND TO ARRAY MSGT}
C>     LMSGT    - INTEGER: DIMENSIONED SIZE (IN INTEGER WORDS) OF MSGT;
C>                USED BY THE SUBROUTINE TO ENSURE THAT IT DOES NOT
C>                OVERFLOW THE MSGT ARRAY
C>
C>   OUTPUT ARGUMENT LIST:
C>     MSGT     - INTEGER: *-WORD PACKED BINARY ARRAY CONTAINING BUFR
C>                MESSAGE (FIRST MSGL WORDS FILLED)
C>     MSGL     - INTEGER: NUMBER OF WORDS FILLED IN MSGT
C>                       0 = no message was returned
C>
C> REMARKS:
C>    THIS ROUTINE CALLS:        BORT     CLOSMG   MSGUPD   STATUS
C>                               WRCMPS   WRTREE
C>    THIS ROUTINE IS CALLED BY: None 
C>                               Normally called only by application
C>                               programs.
C>
      SUBROUTINE WRITSA(LUNXX,LMSGT,MSGT,MSGL)



      USE MODA_BUFRMG

      INCLUDE 'bufrlib.inc'

      COMMON /MSGCMP/ CCMF

      CHARACTER*1 CCMF

      DIMENSION MSGT(*)

C----------------------------------------------------------------------
C----------------------------------------------------------------------

      LUNIT = ABS(LUNXX)

C  CHECK THE FILE STATUS
C  ---------------------

      CALL STATUS(LUNIT,LUN,IL,IM)
      IF(IL.EQ.0) GOTO 900
      IF(IL.LT.0) GOTO 901
      IF(IM.EQ.0) GOTO 902

C  IF LUNXX < 0, FORCE MEMORY MSG TO BE WRITTEN (W/O ANY CURRENT SUBSET)
C  ---------------------------------------------------------------------

      IF(LUNXX.LT.0) CALL CLOSMG(LUNIT)

C  IS THERE A COMPLETED BUFR MESSAGE TO BE RETURNED?
C  -------------------------------------------------

      IF(MSGLEN(LUN).GT.0) THEN
         IF(MSGLEN(LUN).GT.LMSGT) GOTO 904
         MSGL = MSGLEN(LUN)
         DO N=1,MSGL
           MSGT(N) = MSGTXT(N,LUN)
         ENDDO
         MSGLEN(LUN) = 0
      ELSE
         MSGL = 0
      ENDIF

      IF(LUNXX.LT.0) GOTO 100

C  PACK UP THE SUBSET AND PUT IT INTO THE MESSAGE
C  ----------------------------------------------

      CALL WRTREE(LUN)
      IF( CCMF.EQ.'Y' ) THEN
          CALL WRCMPS(LUNIT)
      ELSE
          CALL MSGUPD(LUNIT,LUN)
      ENDIF

C  IF THE JUST-COMPLETED CALL TO WRCMPS OR MSGUPD FOR THIS SUBSET CAUSED
C  A MESSAGE TO BE FLUSHED TO ABS(LUNXX), THEN ATTEMPT TO RETRIEVE AND
C  RETURN THAT MESSAGE NOW.  OTHERWISE, WE RUN THE RISK THAT THE NEXT
C  CALL TO OPENMB OR OPENMG MIGHT CAUSE ANOTHER MESSAGE TO BE FLUSHED,
C  AND THUS OVERWRITE THE CURRENT MESSAGE WITHIN ARRAY MSGTXT BEFORE WE
C  HAD THE CHANCE TO RETRIEVE IT DURING THE NEXT CALL TO WRITSA.

C  ALSO NOTE THAT, IN RARE INSTANCES (E.G. IF THE BYTE COUNT OF THE MOST
C  RECENT SUBSET IS > 65530), WE COULD END UP WITH TWO BUFR MESSAGES
C  AVAILABLE TO BE RETURNED FROM THIS ONE CALL TO WRITSA.  IF SUFFICIENT
C  SPACE IS AVAILABLE IN THE MSGT ARRAY, THEN GO AHEAD AND RETURN BOTH
C  MESSAGES NOW.

      IF( (MSGLEN(LUN).GT.0) .AND. (MSGL+MSGLEN(LUN).LE.LMSGT) ) THEN
         DO N = 1,MSGLEN(LUN)
           MSGT(MSGL+N) = MSGTXT(N,LUN)
         ENDDO
         MSGL = MSGL+MSGLEN(LUN)
         MSGLEN(LUN) = 0
      ENDIF

C  EXITS
C  -----

100   RETURN
900   CALL BORT('BUFRLIB: WRITSA - OUTPUT BUFR FILE IS CLOSED, IT '//
     . 'MUST BE OPEN FOR OUTPUT')
901   CALL BORT('BUFRLIB: WRITSA - OUTPUT BUFR FILE IS OPEN FOR '//
     . 'INPUT, IT MUST BE OPEN FOR OUTPUT')
902   CALL BORT('BUFRLIB: WRITSA - A MESSAGE MUST BE OPEN IN OUTPUT '//
     . 'BUFR FILE, NONE ARE')
904   CALL BORT('BUFRLIB: WRITSA - OVERFLOW OF OUTPUT BUFR MESSAGE '//
     . 'ARRAY; TRY A LARGER DIMENSION FOR THIS ARRAY')
      END
