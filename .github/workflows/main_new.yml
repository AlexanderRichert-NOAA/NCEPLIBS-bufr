name: Build and Test
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [macos-10.15,  ubuntu-20.04]
        ccompiler: [clang, gcc-9, gcc-10]
        fcompiler: [gfortran-9, gfortran-10]
        exclude:
          - os: ubuntu-20.04
            ccompiler: clang
          - ccompiler: gcc-9
            fcompiler: gfortran-10
          - ccompiler: gcc-10
            fcompiler: gfortran-9

    steps:

    - name: install-deps
      run: |
          sudo apt-get update
          sudo apt-get install doxygen
          sudo apt-get install python3-pip python3-dev python3-numpy
          sudo python3 -m pip install -U pip setuptools
          sudo python3 -m pip install -U numpy
          sudo python3 -m pip install -U netCDF4
          sudo python3 -m pip install -U pdoc
          sudo python3 -m pip install -U gcovr

    - name: checkout
      uses: actions/checkout@v2
      with:
        path: bufr
        submodules: true

    - name: build
      run: |
        if [[ ${{ matrix.ccompiler }} == "clang" ]]; then
          export CC=clang
        elif [[ ${{ matrix.ccompiler }} == "gcc-9" ]]; then
          export CC=gcc-9
        elif [[ ${{ matrix.ccompiler }} == "gcc-10" ]]; then
          export CC=gcc-10
        fi
        if [[ ${{ matrix.fcompiler }} == "gfortran-9" ]]; then
          export FC=gfortran-9
        elif [[ ${{ matrix.fcompiler }} == "gfortran-10" ]]; then
          export FC=gfortran-10
        fi
        cd bufr
        mkdir build
        cd build
           cmake -DCMAKE_INSTALL_PREFIX=./install -DCMAKE_Fortran_FLAGS="-g -fprofile-arcs -ftest-coverage -fprofile-abs-path -O0" ..
        make -j2
        make install

    - name: test
      run: |
        cd $GITHUB_WORKSPACE/bufr/build
        ctest
           gcovr -r .. --html-details -o test-coverage.html

    - uses: actions/upload-artifact@v2
        name: test-coverage
        path: NCEPLIBS-bufr/build/*.html
      
